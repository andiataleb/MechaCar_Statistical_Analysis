?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
View(demo_table)
library(jsonlite)
?fromJSON
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
View(demo_table2)
> x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
View(demo_table)
demo_table[3, "Year"]
demo_table[3, 2]
demo_table[3,3]
demo_table$"vehicle Class"
demo_table$"vehicle_class"
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
View(demo_table2)
View(filter_table)
?subset()
View(demo_table2)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
?sample()
> sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
View(demo_table)
emo_tabe[sample(1:nrow(demo_table), 3),]
demo_table[sample(1:nrow(demo_table),3),]
library(tidyverse)
?mutate()
demo_table <- demo_table %>%mutate(Milage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
summarize_demo <- demo_table2 %>% groupby(condition)%>% summarize(Mean_Milage=mean(odometer), .groups = 'keep') #creat summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), .groups = 'keep') #create summary table
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_vehicle=n(), .groups = 'keep') #create summary table
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv, check.names = F,StringAsFactors = F')
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
demo_table3 <- read.csv('demo2.csv', check.names = F,stringAsFactors = F)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F
> demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F
> demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
>
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
View(demo_table3)
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
demo_table4 <- read.csv(Vehicle_Data.xlsx, check.names = F, stringsAsFactors = F)
?read_excel
demo_table4 <- read_xlsx(Vehicle_Data, col_names = TRUE, skip=0)
demo_table4 <- read_excel('Vehicle_Data')
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
View(long_table)
View(demo_table3)
View(demo_table3)
spread()
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
View(wide_table)
View(demo_table3)
View(demo_table3)
View(wide_table)
View(summarize_demo)
all.equal(demo_table3,wide_table)
table <-demo_table3[,order(colnames(wide_table))]
View(table)
table <-demo_table3[,colnames(wide_table))]
table <- demo_table3[,(colnames(wide_table))]
?ggplot()
head(mpg)
ply <- ggplot(mpg,aes(x=class))#import dataset into ggplot2
ply + geom_bar() #plot a bar plot
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .group = 'keep') #create summary table
plt <- ggplot(mpg, summary, aes(x=manufacturer, y=Vehicle_Count)) #import datset into ggplot2
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt+geom_col() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x_axis lable 45 degress
mpg_summary <- subset(mpg,manufacurer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>%summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
View(mpg_summary)
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(16:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive") #add scatter plot with multiple aesthetics
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)
;l
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2.
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
;k
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
knj
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degree
joj
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
shapitro.test(mtcarts$wt)
shapiro.test(mtcars$wt)
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
population_table <- read.csv('used_car_data.csv'.check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_Car_data.csv', check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Drive))) #import dataset into ggplot2
plt + geom_density() #Visualize distribution using density plot
sample_table <- pouplation_table %>% sample_n(50)
sample_table <- population_table, sample_n(50)
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population Means
sample_table <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
setwd("C:/Users/andia/Desktop/BootCamp/R_Analysis/01_Demo")
mpg_data <- read.csv('mpg_modified.csv')
mpg_1999 <- mpg_data %>% filter(year=1999)
mpg_data <- mpg_data %>5 filter(year==1999)
mpg_1999 <- mog_data %>% filter(year==1999)
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>%filter(year==2008)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
mtcars_filt <- mtcars[,c("hp","cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl,data=mtcars_filt)
summary(aov(hp ~ cyl,data=mtcars_filt))
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt + grom_poit()
plt_geom_point
plt + geom_point()
cor(mtcars$hp,mtcars$qsec)
used_cars <- read.csv('used_car_data.csv', strigsAsFactors = F)
used_cars <- read.csv('used_Car_data.csv', stringsAsFactors = F)
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price))
plt + geom_point()
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")])
View(used_matrix)
cor(used_matrix)
lm(qsec ~ hp,mtcars) #create linear model
> summary(lm(qsec~hp,mtcars)) #summarize linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
setwd("C:/Users/andia/Desktop/BootCamp/MechaCar_Statistical_Analysis")
